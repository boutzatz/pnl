dnl Jérôme LELONG Feb 2006


AC_REVISION($Revision: 1.47 $)
AC_INIT(PNL, 1.0, contact <jerome.lelong@imag.fr> if you encounter any problem)

AC_CONFIG_AUX_DIR(config)
AC_CONFIG_HEADERS(config.h)
AM_INIT_AUTOMAKE()

if test "X${CXXFLAGS}" != "X"; then
   user_set_cxxflags=yes
fi
if test "X${CFLAGS}" != "X"; then
   user_set_cflags=yes
fi



AM_PROG_LIBTOOL

## Initialize maintainer mode
AM_MAINTAINER_MODE


# dnl Get system type
# dnl use "config.guess" and "config.sub" from directory "config"
# AC_CANONICAL_HOST


AC_ARG_ENABLE(debug,
   [  --enable-debug          compile with "-g" option, default behaviour is to optimize], 
   [enable_debug="yes"], [enable_debug="no"])
AC_ARG_ENABLE(optimize,
   [  --disable-optimize      disable "-0" option off gcc], [enable_optimize="no"], [enable_optimize="yes"])
AC_ARG_ENABLE(verbose,
   [  --disable-silent         tell libtool not to be silent], [], [enable_verbose="no"])
AC_ARG_WITH(internal_blas,
    [  --with-internal-blas    use the internal Blas and Lapack libraries ])
AC_ARG_WITH(gsl,
    [  --without-gsl           do not compile with GSL library ])


if test "$enable_verbose" = no; then  
   LIBTOOL="$LIBTOOL --silent"
fi

################
## build Paths
################

local_dir=`pwd`
local_home=$local_dir
AC_PREFIX_DEFAULT($local_home)
if test "x$prefix" = "xNONE" ; then
   prefix=$local_home
fi

libdir="$prefix/lib"
includedir="$prefix/include"
LIBPNLDIR=`pwd`
##############################
## define C and C++ compilers
##############################


AC_PROG_CC
AM_PROG_CC_C_O 
AC_PROG_CXX
AC_PROG_F77
AC_PROG_MAKE_SET
AC_PROG_INSTALL


##########################
## updating flags
##########################

if test "x$enable_optimize" = xyes  && test "x$enable_debug" = xno ; then
   AC_DEFINE(PNL_RANGE_CHECK_OFF, 1, [turn off range checking by default internally])
fi

# removing -ansi from CFLAGS
CC_OPTIONS="`echo $CFLAGS | sed -e 's/-ansi//g'`"
CXX_OPTIONS=$CXXFLAGS
if test "x$GCC" = xyes ; then
   if test "x$enable_debug" = xyes || test "x$enable_optimize" = xno ; then
      CC_OPTIONS=`echo $CC_OPTIONS | sed -e 's/-O[[0-9]]*//g'`   
      CC_OPTIONS=`echo $CC_OPTIONS | sed -e 's/-g[[0-9]]*$//g'`          
      CC_OPTIONS=`echo $CC_OPTIONS | sed -e 's/-g[[0-9]]* //g'`           
      CC_OPTIONS="${CC_OPTIONS} -Wall -g -Wdeclaration-after-statement"
      CXX_OPTIONS=`echo $CXX_OPTIONS | sed -e 's/-O[[0-9]]*//g'`   
      CXX_OPTIONS=`echo $CXX_OPTIONS | sed -e 's/-g[[0-9]]*$//g'`          
      CXX_OPTIONS=`echo $CXX_OPTIONS | sed -e 's/-g[[0-9]]* //g'`           
      CXX_OPTIONS="${CXX_OPTIONS} -Wall -g -fno-inline"
   else
      CC_OPTIONS="${CC_OPTIONS} -Wall -Wdeclaration-after-statement"
   fi
   #The -mno-cygwin flag to gcc makes gcc link against standard Microsoft DLLs instead of Cygwin. 
   #This is desirable for native Windows programs that don't need a UNIX emulation layer.
   case "$host" in
        *-*-cygwin*)
	 CC_OPTIONS="${CC_OPTIONS} -mno-cygwin"
	 ;;
   esac
   #This option enables compilation of the free or the complete versions of the source code
   #for further explanation cf the directory Unix\FreePremiaScripts\
   if test "$with_premiaversion" != "" ; then
      CC_OPTIONS="${CC_OPTIONS} -DPremiaCurrentVersion=${PREMIAVERSION}"
   fi
fi
AM_CFLAGS=${CC_OPTIONS}
AM_CXXFLAGS=${CXX_OPTIONS}

# if the user has not changed the flags, reset them.
# They are passed to AM_xxxx
if test X$user_set_cxxflags != Xyes; then
   CFLAGS=""
fi
if test X$user_set_cflags != Xyes; then
   CXXFLAGS=""
fi  



LDFLAGS="${LDFLAGS} -lm"

AC_C_INLINE
dnl Check for "extern inline", using a modified version of the test
dnl for AC_C_INLINE from acspecific.mt
dnl
AC_CACHE_CHECK([for extern inline], ac_cv_c_extern_inline,
                    [ac_cv_c_extern_inline=no
                    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[extern $ac_cv_c_inline double foo(double x);
                    extern $ac_cv_c_inline double foo(double x) { return x + 1.0 ; } ;
                    double foo (double x) { return x + 1.0 ; };]],
                    [[  foo(1.0)  ]])],[ac_cv_c_extern_inline="yes"],[])])

if test "$ac_cv_c_extern_inline" != no ; then
   AC_DEFINE(HAVE_INLINE,[],[Define if you have inline])
fi




##########################
## check for C functions
##########################
AC_LANG(C)
AC_CHECK_LIB(m,main)
AC_CHECK_FUNCS(tgamma)
AC_CHECK_FUNCS(lgamma)
AC_CHECK_FUNCS(exp10)
AC_CHECK_FUNCS(erfl)
AC_CHECK_FUNCS(trunc)
AC_CHECK_FUNCS(isfinite)
AC_CHECK_FUNCS(finite)
AC_CHECK_FUNCS(isnan)
AC_CHECK_FUNCS(isinf)

##########################
## Check for headers
##########################
AC_CHECK_HEADERS(time.h)
AC_CHECK_HEADERS(limits.h)
AC_CHECK_HEADERS(errno.h)

case "$host" in
     *-*-cygwin* |   *-*-mingw32*)
	 AC_CHECK_HEADERS(process.h)
	 ;;
esac


########################################################
## check for blas
########################################################
USE_BLAS=no
BLAS_LIBS=""
USE_LAPACK=no
LAPACK_LIBS=""
INTERNAL_F2C_DIR=""
INTERNAL_F2C_LA=""
INTERNAL_BLAS_DIR=""
INTERNAL_BLAS_LA=""
INTERNAL_LAPACK_DIR=""
INTERNAL_LAPACK_LA=""
USE_INTERNAL_BLAS=0

if test "x$F77" = "x"; then 
   with_internal_blas=yes   
fi

if test "x$with_internal_blas" != "xyes"; then
   builtin(include,config/acx_blas.m4)
   ACX_BLAS([USE_BLAS=yes])

   if test "$USE_BLAS" = yes; then 
     AM_CFLAGS="$AM_CFLAGS"
     HAVE_BLAS=1
     AC_DEFINE(HAVE_BLAS, [], [Blas is installed])
   else
     with_internal_blas=yes
   fi

   builtin(include,config/acx_lapack.m4)
   ACX_LAPACK([USE_LAPACK=yes])

   if test "$USE_LAPACK" = yes; then 
     AM_CFLAGS="$AM_CFLAGS"
     HAVE_LAPACK=1
     AC_DEFINE(HAVE_LAPACK, [], [Lapack is installed])
   else
     with_internal_blas=yes
   fi
fi

if test "x$with_internal_blas" == "xyes"; then
    USE_INTERNAL_BLAS=1
    INTERNAL_F2C_DIR="libf2c"
    INTERNAL_F2C_LA="libf2c/libf2c.la"
    INTERNAL_BLAS_DIR="libblas"
    INTERNAL_BLAS_LA="libblas/libblas.la"
    INTERNAL_LAPACK_DIR="liblapack"
    INTERNAL_LAPACK_LA="liblapack/liblapack.la"
    LDFLAGS="$LDFLAGS -u MAIN__"
fi 

LDFLAGS="$LDFLAGS $BLAS_LIBS $LAPACK_LIBS"
#######################
## test for underscores
## note that trailing underscores is already checked 
## elsewhere 
#######################

FC_TRAILING_UNDERSCORE=no

if test "x$F77" != "x"; then
   AC_MSG_CHECKING([for leading and/or trailing underscores])
cat << EOF > pipof.f
        subroutine pipof
        end
EOF
   eval "FC1=\"$F77\""
   eval "$FC1 -c pipof.f > /dev/null 2>&1"

   output=`$NM pipof.o|grep _pipof 2>&1`
   if test ! -z "$output"; then
     FC_TRAILING_UNDERSCORE=no
   fi

   output=`$NM pipof.o|grep pipof_ 2>&1`
   if test ! -z "$output"; then
     FC_TRAILING_UNDERSCORE=yes
   fi

   $RM pipof.f pipof.o
fi

if test "$FC_TRAILING_UNDERSCORE" = yes; then
   AC_DEFINE(WTU,[],[trailing underscore in fortran symbols])
fi
AC_MSG_RESULT([$FC_LEADING_UNDERSCORE $FC_TRAILING_UNDERSCORE])

#####################
## test for sharpsign
#####################

AC_MSG_CHECKING([for use of sharpsign in CPP])
AC_TRY_COMPILE([#define C2F(name) name##_],
  [C2F(toto)()],
  AC_MSG_RESULT(yes)
  AC_DEFINE(USE_SHARP_SIGN,[],[sharp sign can be used to in macros]),
  AC_MSG_RESULT(no))


########################################################
## check for GSL
########################################################
USE_GSL=no
GSL_LIBS=""

if test "x$with_gsl" != "xno"; then
   builtin(include,config/gsl.m4)
   AX_PATH_GSL(1.10,[USE_GSL=yes])

   if test "$USE_GSL" = yes; then 
      AM_CFLAGS="$AM_CFLAGS -DHAVE_GSL"
   fi
fi


################################
##  variables for the Makefile
################################


##################################
## to build the doc
##################################


####################
### checking host 
####################


case "$host" in
     *-*-cygwin*)

     AC_DEFINE_UNQUOTED(
			[_WIN32], [1],
			[Running on a Win32 system])

	 AC_DEFINE_UNQUOTED(
			[_CYGWIN], [1],
			[Runnning on Cygwin])
			
	 AC_DEFINE_UNQUOTED(
			[_WIN32], [1],
			[Running on Cygwin and using Windows Acrobat])
     ;;

    i*86-*-mingw32*)

    AC_DEFINE_UNQUOTED(
			[_WIN32], [1],
			[Running on a Win32 system])
			
    ;;


    i*86-*-linux-gnu | *-pc-linux-gnu)
        
    pkgconfigdir=/usr/local/lib/pkgconfig
	;;

    # Darwin/MacOSX
    *-*-darwin*)

    pkgconfigdir=/sw/lib/pkgconfig
    ;;
esac

AC_SUBST(CC)
AC_SUBST(CXX)
AC_SUBST(AM_CFLAGS)
AC_SUBST(AM_CXXFLAGS)
AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(MKDIR_P)
AC_SUBST(HAVE_BLAS)
AC_SUBST(HAVE_LAPACK)
AC_SUBST(BLAS_LIBS)
AC_SUBST(LAPACK_LIBS)
AC_SUBST(LIBPNLDIR)

AC_SUBST(USE_INTERNAL_BLAS)
AC_SUBST(INTERNAL_F2C_DIR)
AC_SUBST(INTERNAL_F2C_LA)
AC_SUBST(INTERNAL_BLAS_DIR)
AC_SUBST(INTERNAL_BLAS_LA)
AC_SUBST(INTERNAL_LAPACK_DIR)
AC_SUBST(INTERNAL_LAPACK_LA)



AC_OUTPUT(Makefile \
Makeuser.incl \
examples/Makefile \
src/Makefile \
src/libamos/Makefile \
src/libblas/Makefile \
src/liblapack/Makefile \
src/libcephes/Makefile \
src/libf2c/Makefile \
src/librand/Makefile \
src/libfftpack/Makefile \
src/linalg/Makefile \
src/sort/Makefile \
src/specfun/Makefile \
src/include/Makefile \
)

echo
echo
echo "*******************"
echo "*     Summary     *"
echo "*******************"
echo
echo "C compiler.............:" $CC
echo "C options..............:" $AM_CFLAGS $CFLAGS
echo "$user_set_cflags"
echo "linker flags...........:" $LDFLAGS 
echo "installation prefix....:" $prefix
if test "x$USE_INTERNAL_BLAS" == "x"; then 
    echo "using internal Blas & Lapack"
fi
echo
echo

